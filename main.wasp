app Wasplit {
  title: "Wasplit",
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/"
  }
}

route RootRoute { path: "/", to: LandingPage }
page LandingPage {
  component: import Landing from "@ext/LandingPage.js"
}

route RootRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import Dashboard from "@ext/DashboardPage.js",
  authRequired: true
}

entity User {=psl
    id          Int     @id @default(autoincrement())
    username    String  @unique
    password    String
    participant Participant?
psl=}

entity Category {=psl
    id       Int @id @default(autoincrement())
    name     String
    expenses Expense[]
psl=}

entity Currency {=psl
  id Int @id @default(autoincrement())
  name String
  symbol String
  expenseParticipants ExpenseParticipant[]
psl=}

entity Expense {=psl
    id         Int     @id @default(autoincrement())
    name       String
    date       DateTime @default(now())
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    expenseParticipants ExpenseParticipant[]
psl=}

entity Group {=psl
  id         Int     @id @default(autoincrement())
  name       String
  groupParticipants GroupParticipant[]
psl=}

entity GroupParticipant {=psl
  group         Group @relation(fields: [groupId], references: [id])
  groupId       Int
  participant   Participant @relation(fields: [participantId], references: [id])
  participantId Int

  @@id([groupId, participantId])
psl=}

entity ExpenseParticipant {=psl
  amount        Int
  expense       Expense @relation(fields: [expenseId], references: [id])
  expenseId     Int
  participant   Participant @relation(fields: [participantId], references: [id])
  participantId Int
  currency      Currency @relation(fields: [currencyId], references: [id])
  currencyId    Int


  @@id([expenseId, participantId])
psl=}

entity Participant {=psl
    id         Int     @id @default(autoincrement())
    name       String
    email       String
    user   User? @relation(fields: [userId], references: [id])
    userId Int?
    groupParticipants GroupParticipant[]
    expenseParticipants ExpenseParticipant[]
psl=}
